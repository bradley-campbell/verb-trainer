[{"/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/index.js":"1","/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/views/App/index.js":"2","/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/views/HomePage/index.js":"3","/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/components/FilterRadioGroup/index.js":"4","/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/components/FilterRadioGroup/MoodRadio.js":"5","/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/components/Header.js":"6","/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/components/SearchBar.js":"7","/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/context/QueryContext.js":"8","/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/views/Quiz/index.js":"9","/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/components/QuizInput.js":"10","/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/components/FilterRadioGroup/PersonRadio.js":"11"},{"size":399,"mtime":1611437152729,"results":"12","hashOfConfig":"13"},{"size":826,"mtime":1611434466134,"results":"14","hashOfConfig":"13"},{"size":716,"mtime":1611534789971,"results":"15","hashOfConfig":"13"},{"size":845,"mtime":1611534628742,"results":"16","hashOfConfig":"13"},{"size":809,"mtime":1611534595908,"results":"17","hashOfConfig":"13"},{"size":518,"mtime":1611434600945,"results":"18","hashOfConfig":"13"},{"size":938,"mtime":1611533295009,"results":"19","hashOfConfig":"13"},{"size":1882,"mtime":1611533163661,"results":"20","hashOfConfig":"13"},{"size":2621,"mtime":1611533139935,"results":"21","hashOfConfig":"13"},{"size":3291,"mtime":1611535397596,"results":"22","hashOfConfig":"13"},{"size":4015,"mtime":1611534476599,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"jhmyqt",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/index.js",[],["52","53"],"/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/views/App/index.js",[],["54","55"],"/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/views/HomePage/index.js",[],"/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/components/FilterRadioGroup/index.js",["56"],"/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/components/FilterRadioGroup/MoodRadio.js",[],"/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/components/Header.js",[],["57","58"],"/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/components/SearchBar.js",["59","60","61","62"],"import React, { useState, useContext } from \"react\";\nimport { Input, Form, Button } from \"semantic-ui-react\";\n\nimport QueryContext from \"../context/QueryContext\";\n\n// const submitButtonStyles = {\n//   backgroundColor: \"#bc5200\",\n//   color: \"white\",\n// };\n\nconst wrapperStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  flexDirection: window.innerWidth > 700 ? \"row\" : \"column\",\n};\n\nconst FilterResults = ({ handleFetch }) => {\n  const {\n    options: { mood, tense, person },\n    query,\n    setQuery,\n  } = useContext(QueryContext);\n\n  const handleSubmit = () => {\n    handleFetch();\n  };\n\n  return (\n    <div style={wrapperStyle}>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          onChange={(e) => {\n            setQuery({ ...query, verb: e.target.value });\n          }}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default FilterResults;\n","/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/context/QueryContext.js",[],["63","64"],"/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/views/Quiz/index.js",["65","66","67"],"import React, { useContext, useState } from \"react\";\nimport RadioGroup from \"../../components/FilterRadioGroup\";\n\nimport QuizInput from \"../../components/QuizInput\";\nimport QueryContext from \"../../context/QueryContext\";\nimport DataContext from \"../../context/DataContext\";\n\nconst Quiz = () => {\n  const { verbTable, setVerbTable } = useContext(DataContext);\n  const {\n    query: { verb },\n  } = useContext(QueryContext);\n\n  const handleFetch = async () => {\n    console.log(\"hi\");\n    const response = await fetch(`/table?verb=${verb}`);\n    const verbTable = await response.json();\n    setVerbTable({ data: verbTable.data });\n    console.log(verbTable);\n  };\n\n  return <QuizInput handleFetch={handleFetch} />;\n};\n\nexport default Quiz;\n\n//     <Wrapper>\n//       <h1>QUIZ</h1>\n//       <ChooseVerb />\n\n//       {verbTable.data && (\n//         <>\n//           <Form\n//             className={classes.root}\n//             noValidate\n//             autoComplete=\"off\"\n//             onSubmit={handleSubmit}\n//           >\n//             <h1>\n//               {mood} - {temps}\n//             </h1>\n//             <h1>{verb}</h1>\n//             <QuizFields>\n//               <QuizColumn>\n//                 <Input placeholder=\"Je\" personne=\"s1\" />\n//                 <Input placeholder=\"Tu\" personne=\"s2\" />\n//                 <Input placeholder=\"Il/Elle/On\" personne=\"s3\" />\n//               </QuizColumn>\n//               <QuizColumn>\n//                 <Input placeholder=\"Nous\" personne=\"p1\" />\n//                 <Input placeholder=\"Vous\" personne=\"p2\" />\n//                 <Input placeholder=\"Ils/Elles\" personne=\"p3\" />\n//               </QuizColumn>\n//             </QuizFields>\n\n//             {result && <h1>{result}</h1>}\n\n//             <ButtonDiv>\n//               <SubmitButton />\n//             </ButtonDiv>\n//           </Form>\n//         </>\n//       )}\n//     </Wrapper>\n//   );\n\n// const handleFetch = async (query, setVerbTable) => {\n//   const response = await fetch(`/table?verb=${query.verb}`);\n//   const verbTable = await response.json();\n//   setVerbTable({ data: verbTable.data });\n// };\n\n// const handleSubmit = (e) => {\n\n//   e.preventDefault();\n//   if (\n//     JSON.stringify(verbTable.data[mood][temps]) === // Compare user response with fetched verb table\n//     JSON.stringify(userResponse)\n//   ) {\n//     console.log(\"good job!\"); // TODO - If there's a match, the user should see a message\n//     setResult(\"Good job!\");\n//   } else {\n//     setResult(\"Try again\"); // TODO - If there's no match, the user should see a message - maybe event a count of how many fields match\n//   }\n// };\n","/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/components/QuizInput.js",["68","69","70","71"],"/Users/lovesit/Documents/codingProjects/verb-trainer/client/src/components/FilterRadioGroup/PersonRadio.js",["72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":24,"column":6,"nodeType":"81","endLine":24,"endColumn":18,"suggestions":"82"},{"ruleId":"73","replacedBy":"83"},{"ruleId":"75","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"89","line":20,"column":16,"nodeType":"87","messageId":"88","endLine":20,"endColumn":20},{"ruleId":"85","severity":1,"message":"90","line":20,"column":22,"nodeType":"87","messageId":"88","endLine":20,"endColumn":27},{"ruleId":"85","severity":1,"message":"91","line":20,"column":29,"nodeType":"87","messageId":"88","endLine":20,"endColumn":35},{"ruleId":"73","replacedBy":"92"},{"ruleId":"75","replacedBy":"93"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":29,"nodeType":"87","messageId":"88","endLine":1,"endColumn":37},{"ruleId":"85","severity":1,"message":"94","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":18},{"ruleId":"85","severity":1,"message":"95","line":9,"column":11,"nodeType":"87","messageId":"88","endLine":9,"endColumn":20},{"ruleId":"85","severity":1,"message":"96","line":1,"column":29,"nodeType":"87","messageId":"88","endLine":1,"endColumn":38},{"ruleId":"85","severity":1,"message":"97","line":4,"column":3,"nodeType":"87","messageId":"88","endLine":4,"endColumn":13},{"ruleId":"85","severity":1,"message":"98","line":5,"column":3,"nodeType":"87","messageId":"88","endLine":5,"endColumn":14},{"ruleId":"85","severity":1,"message":"99","line":6,"column":3,"nodeType":"87","messageId":"88","endLine":6,"endColumn":13},{"ruleId":"100","severity":1,"message":"101","line":112,"column":1,"nodeType":"102","messageId":"103","endLine":148,"endColumn":2},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],["104"],["105"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'query' and 'setQuery'. Either include them or remove the dependency array.","ArrayExpression",["106"],["104"],["105"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'mood' is assigned a value but never used.","'tense' is assigned a value but never used.","'person' is assigned a value but never used.",["104"],["105"],"'RadioGroup' is defined but never used.","'verbTable' is assigned a value but never used.","'useEffect' is defined but never used.","'firstGroup' is defined but never used.","'secondGroup' is defined but never used.","'thirdGroup' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [query, query.mood, setQuery]",{"range":"109","text":"110"},[590,602],"[query, query.mood, setQuery]"]